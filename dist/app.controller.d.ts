import { AppService } from "./app.service";
import { Response } from "express";
import { FoodService } from "./food/food.service";
import { SlideDTO, UpdateSlideDTO } from "./trangchu.entity/dto/slideDTO";
import { MemoryDTO, UpdateMemoryDTO } from "./trangchu.entity/dto/memoryDTO";
import { MemoryService } from "./memory.service";
import { InfoResDTO, UpdateInfoResDTO } from "./trangchu.entity/dto/infoResDTO";
import { FooterService } from "./footer/footer.service";
import { FooterDTO, NewFooterDTO } from "./trangchu.entity/dto/footerDTO";
import { IconDTO, IconUpdate } from "./trangchu.entity/dto/iconsDTO";
export declare class AppController {
    private readonly foodService;
    private readonly appService;
    private readonly memoryService;
    private readonly footerService;
    constructor(foodService: FoodService, appService: AppService, memoryService: MemoryService, footerService: FooterService);
    getAllFood(res: Response): Promise<void>;
    getListSlide(res: Response): Promise<void>;
    insert(slide: SlideDTO): Promise<import("./trangchu.entity/slide").Slide>;
    findOne(id: string, res: Response): Promise<void>;
    update(id: string, slide: UpdateSlideDTO, res: Response): Promise<void>;
    getListMemory(res: Response): Promise<void>;
    insertMem(memory: MemoryDTO): Promise<import("./trangchu.entity/kyNiemKH").Memory>;
    findOneMem(id: string, res: Response): Promise<void>;
    updateMem(id: string, memory: UpdateMemoryDTO, res: Response): Promise<void>;
    getListInformation(res: Response): Promise<void>;
    insertInformation(information: InfoResDTO): Promise<import("./trangchu.entity/infoRes").Information>;
    findOneInfoResDTO(id: string, res: Response): Promise<void>;
    updateInfoResDTO(id: string, information: UpdateInfoResDTO, res: Response): Promise<void>;
    getListFooter(res: Response): Promise<void>;
    insertFooter(footer: FooterDTO): Promise<import("./trangchu.entity/footer").Footer>;
    findOneFooterDTO(id: string, res: Response): Promise<void>;
    updateFooterDTO(id: string, footer: NewFooterDTO, res: Response): Promise<void>;
    formAdd(res: Response): Promise<void>;
    addIcons(res: Response, icons: IconDTO): Promise<void>;
    formUpdate(res: Response, id: string): Promise<void>;
    updateIcons(res: Response, id: string, icon: IconUpdate): Promise<void>;
    deleteIcons(res: Response, id: string): Promise<void>;
}
